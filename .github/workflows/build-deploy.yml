name: Build and Push to AWS ECR

# trigger action on push or pull request
on: [push]

# create the job upon initial trigger
jobs:

  build:

    # referencing environment variables set in the github actions
    environment:
      # https://github.com/adnandmth/python_api/settings/environments/1957271115/edit
      name: testing 

    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DATABASE: ${{secrets.DATABASE_NAME}}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    # practically you can select other OS as well
    runs-on: ubuntu-latest 

    steps:
      # pulling all of the files available in the repo
      - name: pulling git repo
        # from checkout github marketplace
        uses: actions/checkout@v4 

      # install python -> base language of the app
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      # update pip to get most recent version
      - name: update pip
        run: python -m pip install --upgrade pip

      # install dependencies using the requirements.txt file in the repo
      - name: install all dependencies
        run: pip install -r requirements.txt

      # run the test classes
      - name: test with pytest
        run: pip install pytest
          pytest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: python_api-api
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG